# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[opener]
edit = [
	{ run = 'micro "$@"', desc = "Micro", block = true, for = "unix" },
	{ run = 'zed "$@"', desc = "Zed", block = true, for = "unix" },
	{ run = 'code "$@"', desc = "VS Code", block = true, for = "unix" },
]
open = [
	{ run = 'qimgv "$1"',      desc = "Open", for = "linux" },
]
extract = [
	{ run = '7z e "$@" -o\*', desc = "Extract here", for = "unix" },
]
play = [
	{ run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]
browser = [
  { run = 'xdg-open "$@"', desc = "Open in browser", block = false, for = "unix" }
]


[open]
rules = [
	# Open PDFs in default browser
	{ mime = "application/pdf", use = "browser" },
	# Open HTML files in default browser
	{ mime = "text/html", use = "browser" },
	# Folder
	{ name = "*/", use = [ "edit", "open" ] },
	# Text
	{ mime = "text/*", use = "edit" },
	# Image
	{ mime = "image/*", use = "open" },
	# Media
	{ mime = "{audio,video}/*", use = "play" },
	# Archive
	{ mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", use = [ "extract" ] },
	# JSON
	{ mime = "application/{json,ndjson}", use = "edit" },
	{ mime = "*/javascript", use = "edit" },
	# Empty file
	{ mime = "inode/empty", use = "edit" },
	# Fallback
	{ name = "*", use = "open" },
]


[plugin]
fetchers = [
	# Mimetype
	{ id = "mime", name = "*", run = "mime", prio = "high" },
]
spotters = [
	{ name = "*/", run = "folder" },
	# Code
	{ mime = "text/*", run = "code" },
	{ mime = "application/{mbox,javascript,wine-extension-ini}", run = "code" },
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# Fallback
	{ name = "*", run = "file" },
]
preloaders = [
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Font
	{ mime = "font/*", run = "font" },
	{ mime = "application/ms-opentype", run = "font" },
]
previewers = [
	{ name = "*/", run = "folder", sync = true },
	# Code
	{ mime = "text/*", run = "code" },
	{ mime = "application/{mbox,javascript,wine-extension-ini}", run = "code" },
	# JSON
	{ mime = "application/{json,ndjson}", run = "json" },
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Archive
	{ mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", run = "archive" },
	{ mime = "application/{debian*-package,redhat-package-manager,rpm,android.package-archive}", run = "archive" },
	{ name = "*.{AppImage,appimage}", run = "archive" },
	# Virtual Disk / Disk Image
	{ mime = "application/{iso9660-image,qemu-disk,ms-wim,apple-diskimage}", run = "archive" },
	{ mime = "application/virtualbox-{vhd,vhdx}", run = "archive" },
	{ name = "*.{img,fat,ext,ext2,ext3,ext4,squashfs,ntfs,hfs,hfsx}", run = "archive" },
	# Font
	{ mime = "font/*", run = "font" },
	{ mime = "application/ms-opentype", run = "font" },
	# Empty file
	{ mime = "inode/empty", run = "empty" },
	# Fallback
	{ name = "*", run = "file" },
]
